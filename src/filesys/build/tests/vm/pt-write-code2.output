Copying tests/vm/pt-write-code2 into /tmp/OVRqRf8SpZ.dsk...
Copying ../../tests/vm/sample.txt into /tmp/OVRqRf8SpZ.dsk...
Writing command line to /tmp/eJbhSMeYE5.dsk...
qemu -hda /tmp/eJbhSMeYE5.dsk -hdb /tmp/9zqC1nRATP.dsk -hdc /tmp/OVRqRf8SpZ.dsk -hdd /tmp/OVpjaUDaHY.dsk -m 4 -net none -nographic -monitor null
Kernel command line: -q -f put pt-write-code2 put sample.txt run pt-write-code2
Pintos booting with 4,096 kB RAM...
373 pages available in kernel pool.
372 pages available in user pool.
Calibrating timer...  78,540,800 loops/s.
hd0:0: detected 153 sector (76 kB) disk, model "QEMU HARDDISK", serial "QM00001"
hd0:1: detected 4,032 sector (1 MB) disk, model "QEMU HARDDISK", serial "QM00002"
hd1:0: detected 76 sector (38 kB) disk, model "QEMU HARDDISK", serial "QM00003"
hd1:1: detected 8,064 sector (3 MB) disk, model "QEMU HARDDISK", serial "QM00004"
Formatting file system...done.
Boot complete.
Putting 'pt-write-code2' into the file system...
Putting 'sample.txt' into the file system...
Executing 'pt-write-code2':
(pt-write-code2) begin
(pt-write-code2) open "sample.txt"
pt-write-code2: exit(-1)
Kernel PANIC at ../../threads/synch.c:198 in lock_acquire(): assertion `!lock_held_by_current_thread (lock)' failed.
Call stack: 0xc0107366 0xc0102936 0xc010d8d4 0xc010c919 0xc010988b 0xc0100c3f 0xc010b05f 0xc010ad45 0xc0101825 0xc01019fb 0xc01067d6 0xc010e6f8 0xc010da5b 0xc010c95a 0xc010b42d 0xc010af5d 0xc0101825 0xc01019fb 0x804a091 0x80480e7 0x80486d3 0x8048700.
The `backtrace' program can make call stacks useful.
Read "Backtraces" in the "Debugging Tools" chapter
of the Pintos documentation for more information.
Kernel PANIC recursion at ../../threads/synch.c:198 in lock_acquire().
Timer: 65 ticks
Thread: 0 idle ticks, 64 kernel ticks, 1 user ticks
hd0:0: 0 reads, 0 writes
hd0:1: 109 reads, 155 writes
hd1:0: 76 reads, 0 writes
hd1:1: 0 reads, 0 writes
Console: 1570 characters output
Keyboard: 0 keys pressed
Exception: 5 page faults
Powering off...
